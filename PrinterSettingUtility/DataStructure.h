//
//  DataStructure.h
//  MachineSetup
//
//  Created by Helen Liu on 7/22/11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#ifndef _DATA_STRUCTURE_H_
#define _DATA_STRUCTURE_H_


#import <Cocoa/Cocoa.h>
#import "TargetVersion.h"


#define DEV_TYPE_USB            1
#define DEV_TYPE_NET            2

#define USB_VENDER_ID_CP115     0x0550
#define USB_PRODUCT_ID_CP115    0x0171

#define USB_VENDER_ID_CP116     0x0550
#define USB_PRODUCT_ID_CP116    0x0172

#define USB_VENDER_ID_6020      0x0924
#define USB_PRODUCT_ID_6020     0x3d6f



/******/


#define T_PRINTER_STATUS_READY                              0x8000001//: Ready
#define T_PRINTER_STATUS_PRINTING                           0x1a00010//: Printing
#define T_PRINTER_STATUS_POWER_SAVE_MODE                    0x1a0000d//: Power Saving
#define T_PRINTER_STATUS_WARMING_UP                         0x1a0000e//: Warming Up
#define T_PRINTER_STATUS_PENDING_DELETION                   0x1a0000c//: Pending Deletion
#define T_PRINTER_STATUS_PAUSE                              0x05//: Paused (Generated by SW)
#define T_PRINTER_STATUS_WAITING                            0x06//: Waiting
#define T_PRINTER_STATUS_PROCESSING						    0x1a00001//: Processing
#define T_PRINTER_STATUS_BUSY                               0x08//: Busy (Not supported in Grande)
#define T_PRINTER_STATUS_OFFLINE                            0x9000003//: Offline (Generated by SW)
                                                                     //0x7000001 to 0x9000003  2013.9.24
#define T_PRINTER_STATUS_TONER_LOW                          0x5000001//: Toner low
#define T_PRINTER_STATUS_INITIALIZING						0x1a0000f//: Initializing
#define T_PRINTER_STATUS_UNKNOWN                            0x1a00006//: Unknown (Generated by SW)
#define T_PRINTER_STATUS_ACTIVE							    0x84//: Active (Not supported in Grande)
#define T_PRINTER_STATUS_MANUAL_FEED_REQUIRED			    0x85//: Manual Feed Required (No supported in Grande)
#define T_PRINTER_STATUS_PAPER_JAM                          0x1000001//: Paper Jam
#define T_PRINTER_STATUS_DOOR_OPEN						    0x2000001//: Door open
#define T_PRINTER_STATUS_OUT_OF_MEMORY                      0x1a00005//: Out of memory
#define T_PRINTER_STATUS_OUT_OF_PAPER                       0x4000001//: Out of paper
#define T_PRINTER_STATUS_PAPER_PROBLEM                      0x1a00007//: Paper Problem
#define T_PRINTER_STATUS_NO_TONER                           0x3000001//: No toner
#define T_PRINTER_STATUS_PAGE_ERROR                         0xC6//: Page error
#define T_PRINTER_STATUS_NOT_AVAILABLE                      0x1a00008//: Not Available (Updating firmware)
#define T_PRINTER_STATUS_OUTPUT_BIN_FULL					0x1a00009//: Output Bin Full (No supported in Grande)
#define T_PRINTER_STATUS_NOT_SUPPORT						0x1a0000a//: Not Support (Not supported in Grande)
#define T_PRINTER_STATUS_USER_INTERVENTION_REQUIRED         0x1a0000b//: User intervention required (No supported
                                                                         //in Grande)
#define T_PRINTER_ADF_COVER_OPEN						    0xCB//:
#define T_PRINTER_ADF_PAPER_JAM						        0x1a00002//:
#define T_PRINTER_STATUS_POWER_OFF						    0x1a00003//: Power Off (Generated by SW)
#define T_PRINTER_STATUS_ERROR                              0x1a00004//: Error
#define OTHER_PRINTER_STATUS_COOLING_DOWN				    0xE0


/******/


#define DEV_ERROR_SUCCESS                                     TRUE
#define DEV_ERROR_PRINTER_PAPER_SIZE_ERROR                    -20
#define DEV_ERROR_COMMUNICATE_WITH_PRINTER_FAILED             -25
#define DEV_ERROR_ACQUIRE_INFORMATION_FAILED                  -28
#define DEV_ERROR_INFOR_NOT_TRANSMIT_PRINTER_IS_RUNNING       -29
#define DEV_ERROR_INFOR_NOT_ACQUIRE_PRINTER_IS_RUNNING        -30
#define DEV_ERROR_PRINTER_RUNNING                             -50

#define DEV_ERROR_WIFI_FAILED                                 -60



/******/


enum
{
    OPERATION_GET = 0,
    OPERATION_SET,
    OPERATION_SEND,
	OPERATION_NOTREFLESH,
};

#define CMD_MARK		                                0x1b
#define RSP_MARK		                                0x1c
#define UTILITY_MARK1	                                0x4D
#define UTILITY_MARK2	                                0x53
#define UTILITY_MARK3	                                0x55

//the command group id code
#define DEV_CMD_GROUP_ID_GET						    0x01
#define DEV_CMD_GROUP_ID_SET						    0x02
#define DEV_CMD_GROUP_ID_PSR_REPORTS				    0x03
#define DEV_CMD_GROUP_ID_DEVELOPER_STIR_MODE		    0x07
#define DEV_CMD_GROUP_ID_REFRESH_MODE				    0x08
#define DEV_CMD_GROUP_ID_RESET_DEFAULTS				    0x09
#define DEV_CMD_GROUP_ID_CHART_PRINT				    0xfe
#define DEV_CMD_GROUP_ID_OTHERS						    0xff
#define DEV_CMD_GROUP_ID_PRODUCTION_LINE			    0xE0
#define DEV_CMD_GROUP_ID_GET_ENVIRONMENT_SENSOR_INFO	0x06

//the command code id code
#define DEV_CMD_CODE_ID_GET_PRINTER_INFORMATION			0x01
#define DEV_CMD_CODE_ID_GET_PRINTER_INFORMATION2		0x16
#define DEV_CMD_CODE_ID_GET_SYSTEM_SETTINGS				0x02
#define DEV_CMD_CODE_ID_METER_READINGS					0x15
#define DEV_CMD_CODE_ID_GET_PAPER_DENSITY				0x04
#define DEV_CMD_CODE_ID_GET_ADJUST_BTR					0x11
#define DEV_CMD_CODE_ID_GET_ADJUST_FUSER				0x12
#define DEV_CMD_CODE_ID_GET_REGISTRATION_ADJUSTMENT		0x05
#define DEV_CMD_CODE_ID_GET_ADJUST_ALTITUDE				0x06
#define DEV_CMD_CODE_ID_GET_NON_GEN_TONER				0x07
#define DEV_CMD_CODE_ID_GET_BTR_REFRESH_MODE			0x13
#define DEV_CMD_CODE_ID_GET_TCP_IP_SETTINGS			    0x09
#define DEV_CMD_CODE_ID_GET_TCP_IP_SETTINGS_V2		    0x1E
#define DEV_CMD_CODE_ID_GET_TRAY_SETTINGS				0x0A
#define DEV_CMD_CODE_ID_GET_EWS				            0x0b
#define DEV_CMD_CODE_ID_GET_SECURE_SETTINGS	            0x1c
#define DEV_CMD_CODE_ID_GET_LIFE_SETTING				0x19
#define DEV_CMD_CODE_ID_GET_DENSITY_ADJUSTMENT			0x14
#define DEV_CMD_CODE_ID_GET_NETWORK_SETTINGS            0x20
#define DEV_CMD_CODE_ID_GET_WIRELESS_SETTINGS			0x1A
#define DEV_CMD_CODE_ID_GET_WIRELESSDIRECT_SETTINGS		0x22
#define DEV_CMD_CODE_ID_GET_WIFI_FEATURES_SETTINGS		0x23
#define DEV_CMD_CODE_ID_GET_WIFI_STATUS					0x24
#define DEV_CMD_CODE_ID_GET_WIRELESSDIRECT_IP_SETTINGS	0x25
#define DEV_CMD_CODE_ID_GET_WIFI_PIN					0x26

#define DEV_CMD_CODE_ID_REPORTS_SYSTEM_SETTINGS		    0x01
#define DEV_CMD_CODE_ID_REPORTS_PANEL_SETTINGS			0x02
#define DEV_CMD_CODE_ID_REPORTS_JOB_HISTORY				0x03
#define DEV_CMD_CODE_ID_REPORTS_ERROR_HISTORY			0x04
#define DEV_CMD_CODE_ID_REPORTS_PRINT_VOLUME_PAGE		0x05
#define DEV_CMD_CODE_ID_REPORTS_DEMO_PAGE				0x06
#define DEV_CMD_CODE_ID_REPORTS_ADDRESS_BOOK_LIST		0x07

#define DEV_CMD_CODE_ID_DEVELOPER_STIR_MODE				0x01

#define DEV_CMD_CODE_ID_REFRESH_MODE_B			        0x04

#define DEV_CMD_CODE_ID_RESET_SYSTEM_SECTION	        0x01
#define DEV_CMD_CODE_ID_GET_ENVIRONMENT_SENSOR_INFO	    0x01

#define DEV_CMD_CODE_ID_OTHER_ENABLE_PANEL_PASSWORD	    0x01
#define DEV_CMD_CODE_ID_OTHER_CHECK_PANEL_PASSWORD		0x02
#define DEV_CMD_CODE_ID_OTHER_RESTART_AIO				0x06
#define	DEV_CMD_CODE_ID_JAM_RECOVERY					0x0A///?????TBV

#define DEV_CMD_CODE_ID_CHART_PRINT_PITCH_CONF                     0x01
#define DEV_CMD_CODE_ID_CHART_PRINT_GHOST_CONF                     0x02
#define DEV_CMD_CODE_ID_CHART_PRINT_FOUR_COLORS_CONF			   0x03
#define DEV_CMD_CODE_ID_CHART_PRINT_MQ                             0x04
#define DEV_CMD_CODE_ID_CHART_PRINT_ALIGNMENT                      0x05
#define DEV_CMD_CODE_ID_CHART_PRINT_DRUM_REFRESH_CONF              0x06
#define DEV_CMD_CODE_ID_CHART_PRINT_GRID2                          0X07
#define DEV_CMD_CODE_ID_CHART_PRINT_TONER_PALETTE_CHECK            0X08
#define DEV_CMD_CODE_ID_CHART_PRINT_DEMO_PAGE                      0X09


/************/


#pragma pack(push,1)

typedef struct DEV_COMMAND //10 bytes
{
	UInt8 cmd_mark;
	UInt8 utility_mark1;
	UInt8 utility_mark2;
	UInt8 utility_mark3;
	UInt8 cmd_group_mark;
	UInt8 cmd_code_mark;
	UInt32 payload_size;
}DEV_COMMAND,*pDEV_COMMAND;

typedef struct DEV_RESPONSE //12 bytes
{
	UInt8 rsp_mark;
	UInt8 errors_code;
	UInt8 cmd_group_mark;
	UInt8 cmd_code_mark;
	UInt8 has_next_rsp;
	UInt8 reserved[3];
	UInt32 payload_size;
}DEV_RESPONSE,*pDEV_RESPONSE;



/* Printer Settings Report---Printer Informaton */

typedef struct DEV_PSR_PRINTERINFORMATION //416 bytes
{
	char cServiceTagNumber[32];
	char cPrinterSerialNumber[32];
	char cPrinterType[32];
	char cAssetTagNumber[32];
	char cMemoryCapacity[32];
	char cProcessorSpeed[32];
	char cFirmwareVersion[32];
	char cNetworkFirmwareVersion[32];
	char cMCUFirmwareVersion[32];
	char cPrintingSpeedColor[32];
	char cPrintingSpeedMonochrome[32];
	char cBootCodeVersion[32];
	char cColorTableVersion[32];
}DEV_PSR_PRINTERINFORMATION, *pDEV_PSR_PRINTERINFORMATION;

typedef struct DEV_PSR_PRINTERINFORMATION_2
{
	char cServiceTagNumber[32];
	char cPrinterSerialNumber[32];
	char cPrinterType[32];
	char cAssetTagNumber[32];
	char cMemoryCapacity[32];
	char cProcessorSpeed[32];
	char cFirmwareVersion[32];
	char cNetworkFirmwareVersion[32];
	char cMCUFirmwareVersion[32];
	char cPrintingSpeedColor[32];
	char cPrintingSpeedMonochrome[32];
	char cBootCodeVersion[32];
	char cColorTableVersion[32];
	char cPanelMessageVersion[32]; //New
	char cNetworkMessageVersion[32]; //New
}DEV_PSR_PRINTERINFORMATION_2, *pDEV_PSR_PRINTERINFORMATION_2;



/* Printer Settings Report---Menu Settings */

typedef struct DEV_SYSTEM_SETTINGS
{
	unsigned char  iPowerSaverTimerMode1;	
	unsigned char  iPowerSaverTimerMode2;	
	unsigned char  iAutoReset;
	UInt8  iPanelSelectTone;
	UInt8  iPanelAlertTone;	
	UInt8  iJobTone;	
	UInt8  iAlertTone;
	UInt8  iOutOfPaperTone;	
	UInt8  iAutoClearAlertTone;
	UInt8  iAllTone;
	UInt16  iTimeOut;
	UInt16  iFaultTimeOut;
	unsigned char  iPanelLanguage;	
	unsigned char  iAutoLogPrint;
	unsigned char  iMMorInch;
	UInt8 reserved[3];
    
}DEV_SYSTEM_SETTINGS, *pDEV_SYSTEM_SETTINGS;

typedef struct DEV_BILLING_METERS
{
	UInt32  uiMeter1;
	UInt32  uiMeter2;
	UInt32  uiMeter3;
	UInt32  uiMeter4;
	UInt32  uiMeter5;
}DEV_BILLING_METERS, *pDEV_BILLING_METERS;

typedef struct DEV_PAPER_DENSITY
{
    UInt8 iPlain;
    UInt8 iLabel;
    UInt8 uiReserved[2];
}DEV_PAPER_DENSITY, *pDEV_PAPER_DENSITY;

typedef struct DEV_ADJUST_BTR
{
	unsigned char  iPlain;
	unsigned char  iBond;
	unsigned char  iRecycled;
	unsigned char  iCardStock;
	unsigned char  iLightGlossyStock;
	unsigned char  iEnvelope;
	unsigned char  iLabel;
	unsigned char  iPostCard;
}DEV_ADJUST_BTR, *pDEV_ADJUST_BTR;

typedef struct DEV_ADJUST_FUSER
{
	unsigned char  iPlain;
	unsigned char  iBond;
	unsigned char  iRecycled;
	unsigned char  iCardStock;
	unsigned char  iLightGlossyStock;
	unsigned char  iEnvelope;
	unsigned char  iLabel;
	unsigned char  iPostCard;
}DEV_ADJUST_FUSER, *pDEV_ADJUST_FUSER;

typedef struct DEV_REGISTRATION_ADJUSTMENT
{
    UInt8 iAutoRegistrationAdjustment;
    SInt8 iColor[9];
    UInt8 uiReserved[2];
}DEV_REGISTRATION_ADJUSTMENT, *pDEV_REGISTRATION_ADJUSTMENT;

typedef struct DEV_ADJUST_ALTITUDE
{
	unsigned char  iAdjustAltitude;
	char cReserved[3];//don't care
}DEV_ADJUST_ALTITUDE, *pDEV_ADJUST_ALTITUDE;

typedef struct DEV_NON_GEN_TONER
{
    UInt8 iNonGenToner;
    UInt8 uiReserved[3];
}DEV_NON_GEN_TONER, *pDEV_NON_GEN_TONER;

typedef struct DEV_BTR_REFRESH
{
    UInt8 iBTRRefresh;
    UInt8 uiReserved[3];
}DEV_BTR_REFRESH, *pDEV_BTR_REFRESH;




/* Printer Settings Report TCP/IP Setting */

typedef struct DEV_TCPIP_SETTINGS
{
    UInt8 iIPMode;
    UInt8 iUseManualAddress;
    UInt8 uiReserved1[2];
	char cIPv6Address[64];
	char cIPv6GatewayAddress[64];
    UInt8 iIPAddressMode;
    UInt8 uiReserved2[3];
    UInt8 dIPAddress[4];
    UInt8 dSubnetMask[4];
    UInt8 dGatewayAddress[4];
}DEV_TCPIP_SETTINGS, *pDEV_TCPIP_SETTINGS;


typedef struct DEV_TCPIP_SETTINGSV2
{
    UInt8 u8IPv6UseManualAddress;
    UInt8 u8Reserved[3];
    char u8aIPv6ManualAddress[40];
	UInt32 u32IPv6ManualMask;
	char u8aIPv6StatelessAddress1[40];
    char u8aIPv6StatelessAddress2[40];
    char u8aIPv6StatelessAddress3[40];
	char u8aIPv6LinkLocalAddress[40];
	char u8aIPv6ManualGatewayAddress[40];
	char u8aIPv6AutoGatewayAddress[40];
}DEV_TCPIP_SETTINGSV2, *pDEV_TCPIP_SETTINGSV2;



/* Printer Settings Report---Tray Settings */

typedef struct DEV_TRAY_SETTINGS
{
	unsigned char  iPaperType;
	unsigned char  iPaperSize;
    UInt16  iCustomSizeY;
    UInt16  iCustomSizeX;
    unsigned char  iDisplayPopup;
    unsigned char  iMMorInch;
}DEV_TRAY_SETTINGS, *pDEV_TRAY_SETTINGS;


typedef struct DEV_SECURE_SETTINGS
{
	UInt8  bPanelLock;
	UInt8  bServiceLockCopy;
	UInt8  bServiceLockFAX;
	UInt8  bServiceLockScan;
	UInt8  bServiceLockUPrint;
	UInt8  bSecureReceive;
	UInt8  Download;
	UInt8  bReserved;
}DEV_SECURE_SETTINGS, *pDEV_SECURE_SETTINGS;




/* Printer Maintenance */

typedef struct DEV_INTERNET_EWS
{
    UInt8 iDisplayOfEWS;
    UInt8 uiReserved[3];
}DEV_EWS, *pDEV_EWS;

typedef struct DEV_XERO_LIFE_SETTING
{
    UInt8 setting;
    UInt8 reserved[3];
}DEV_XERO_LIFE_SETTING, *pDEV_XERO_LIFE_SETTING;

typedef struct DEV_NETWROK_SETTINGS
{
    UInt8 u8ConnectSpeed;
    UInt8 u8Protocol_LPD;
    UInt8 u8Protocol_Port9100;
    UInt8 u8Protocol_IPP;
    UInt8 u8Protocol_WSD_PRINT;
    UInt8 u8Protocol_WSD_SCAN;
    UInt8 u8Protocol_SMB_NetBEUI;
    UInt8 u8Protocol_SMB_TCP_IP;
    UInt8 u8Protocol_FTP;
    UInt8 u8Protocol_NET_TWAIN;
    UInt8 u8Protocol_SNMP;
    UInt8 u8Protocol_EAMIL_ALERT;
    UInt8 u8Protocol_CentreWare_IS;
    UInt8 u8Protocol_Bonjour;
    UInt8 u8Protocol_GCP;
    UInt8 u8Protocol_HTTP_SSL_TLS;
    UInt8 u8IPFilter1_Address[4];
    UInt8 u8IPFilter1_SubnetMask[4];
    UInt8 u8IPFilter1_Mode;
    UInt8 u8IPFilter2_Address[4];
    UInt8 u8IPFilter2_SubnetMask[4];
    UInt8 u8IPFilter2_Mode;
    UInt8 u8IPFilter3_Address[4];
    UInt8 u8IPFilter3_SubnetMask[4];
    UInt8 u8IPFilter3_Mode;
    UInt8 u8IPFilter4_Address[4];
    UInt8 u8IPFilter4_SubnetMask[4];
    UInt8 u8IPFilter4_Mode;
    UInt8 u8IPFilter5_Address[4];
    UInt8 u8IPFilter5_SubnetMask[4];
    UInt8 u8IPFilter5_Mode;
    UInt8 u8Reserved[3];
}DEV_NETWROK_SETTINGS, *pDEV_NETWROK_SETTINGS;

typedef struct DEV_WIRELESS_SETTINGS
{
    char cSSID[36];
    char cWEPKey[4][28];
    char cWPAPSKKey[68];
    UInt8 cNetWorkType;
    UInt8 cAuthMode;
    UInt8 cEncryptType;
    UInt8 cDefaultKeyld;
}DEV_WIRELESS_SETTINGS, *pDEV_WIRELESS_SETTINGS;

typedef struct DEV_WIFI_DIRECT_SETTINGS
{
    char cSSID[36];
    UInt8 cPassphrase[68];
    UInt8 cDeviceName[72];
    UInt8 cP2PEnable;
    UInt8 cP2PGOEnable;
    UInt8 cP2PRole;
    UInt8 cWPSMethod;
	UInt8 cPINCode[12];
	UInt8 cDhcpsDevList[4][36];
}DEV_WIFI_DIRECT_SETTINGS, *pDEV_WIFI_DIRECT_SETTINGS;


typedef struct DEV_WIFI_PIN
{
 
    char PINCode[12];

}DEV_WIFI_PIN, *pDEV_WIFI_PIN;



typedef struct DEV_WIFI_P2P_IP
{
    UInt8 u8P2P_Address[4];
    UInt8 u8P2P_SubnetMask[4];
    UInt8 Reserved[8];
}DEV_WIFI_P2P_IP, *pDEV_WIFI_P2P_IP;



typedef struct DEV_WIFI_STATUS
{
    UInt8 Feature;
    UInt8 Status;
	char cSSID[36];
	UInt8 AuthMode;
	UInt8 EncryptType;
}DEV_WIFI_STATUS, *pDEV_WIFI_STATUS;


typedef struct DEV_WIFI_FEATURES
{
    UInt8 WiFi;
    UInt8 WiFi_Direct;
    UInt8 Reserved[6];
}DEV_WIFI_FEATURES, *pDEV_WIFI_FEATURES;



/*Diagnosis*/

typedef struct DEV_ENVIRONMENT_SENSOR_INFO
{
    UInt8 uiFuserEdge_STS_Temperature;
    UInt8 uiEnvTemperture;
    UInt8 uiHumidity;
    UInt8 uiFuserCenter_NC_Temperature;
    UInt8 uiReserved[4];
}DEV_ENVIRONMENT_SENSOR_INFO, *pDEV_ENVIRONMENT_SENSOR_INFO;



/* NO USE */
typedef struct DEV_DENSITY_ADJUSTMENT
{
	unsigned char  iDensityAdjustment;	
	char	cReserved[3];
}DEV_DENSITY_ADJUSTMENT, *pDEV_DENSITY_ADJUSTMENT;




typedef struct _IOResult
{
	IOReturn	err;
	int			readOrWriteBytes;
} IOResult;

typedef struct {
	////////////////////////////////////////////////////
	// Consumable 
	////////////////////////////////////////////////////
	Byte	TonelStatusLevelK; 	
	Byte	TonelStatusLevelC; 	
	Byte	TonelStatusLevelM; 	
	Byte	TonelStatusLevelY; 	
	Byte	DrumStatusLifeRemain;
    
	////////////////////////////////////////////////////
	// Covers 
	////////////////////////////////////////////////////
	Byte	CoverStatusFlags; 
    
	////////////////////////////////////////////////////
	// Paper Tray
	////////////////////////////////////////////////////
	Byte	PaperTrayStatus; 	
	Byte	PaperSize;	
    
	////////////////////////////////////////////////////
	// Output Tray
	////////////////////////////////////////////////////
	Byte	OutputTrayLevel; 
    
	////////////////////////////////////////////////////
	// General Status and information
	////////////////////////////////////////////////////
	Byte	PrinterStatus;
	wchar_t	OwnerName[16];
	wchar_t	DocuName[16];
	Byte	ErrorCodeGroup;
	Byte	ErrorCodeID;
	UInt16	PrintingPage;	
	UInt16	Copies;
	UInt32	TotalCounter;	
#ifdef _GRANDE
	////////////////////////////////////////////////////
	// TRC index (For ULC only)
	////////////////////////////////////////////////////
	Byte	TRCCurve[12];	
#else
	Byte	reserved[12];
#endif
	Byte	TonerSize[4];
	Byte	PaperType;
	Byte	NonGenTonerMode;
	Byte	AioStatus;
	Byte	bReserved;
	UInt16	wReserved1;
	UInt16	wReserved2;
} PRINTER_STATUS;



/************/


#define PAPER_TYPE_PLAIN                0
#define PAPER_TYPE_LW_CARDSTOCK         1
#define PAPER_TYPE_LABELS               2
#define PAPER_TYPE_ENVELOPE             3
#define PAPER_TYPE_RECYCLED             4

#define PAPER_SIZE_A4                   0
#define PAPER_SIZE_A5                   1
#define PAPER_SIZE_B5                   2
#define PAPER_SIZE_LETTER               3
#define PAPER_SIZE_FOLIO                4
#define PAPER_SIZE_LEGAL                5
#define PAPER_SIZE_EXECUTIVE            6
#define PAPER_SIZE_NO_10                7
#define PAPER_SIZE_MONARCH_ENVELOPE     8
#define PAPER_SIZE_STATEMENT            9
#define PAPER_SIZE_C5                   10
#define PAPER_SIZE_DL                   11
#define PAPER_SIZE_POSTCARD             12
#define PAPER_SIZE_W_POSTCARD           13
#define PAPER_SIZE_CUSTOM_SIZE          22
#define PAPER_SIZE_MONARCH_L            23
#define PAPER_SIZE_DL_L                 24



static const int PAPER_TYPE_LIST[] =
{
 PAPER_TYPE_PLAIN,
 PAPER_TYPE_LW_CARDSTOCK,
 PAPER_TYPE_LABELS,
 PAPER_TYPE_ENVELOPE,
 PAPER_TYPE_RECYCLED,
};

static const int PAPER_SIZE_LIST[] =
{
    PAPER_SIZE_A4,
    PAPER_SIZE_A5,
    PAPER_SIZE_B5,
    PAPER_SIZE_LETTER,
    PAPER_SIZE_FOLIO,
    PAPER_SIZE_LEGAL,
    PAPER_SIZE_EXECUTIVE,
    PAPER_SIZE_NO_10,
    PAPER_SIZE_MONARCH_ENVELOPE,
    PAPER_SIZE_MONARCH_L,
    PAPER_SIZE_STATEMENT,
    PAPER_SIZE_C5,
    PAPER_SIZE_DL,
    PAPER_SIZE_DL_L,
    PAPER_SIZE_CUSTOM_SIZE,
};

#pragma pack(pop)

#endif //_DATA_STRUCTURE_H_