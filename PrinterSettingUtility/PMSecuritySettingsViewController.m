////  PMInternetServicesViewController.m//  MachineSetup////  Created by Wang Kun on 11/20/13.////#import "PMSecuritySettingsViewController.h"#import "DeviceProperty.h"#import "AppDelegate.h"#import "DataStructure.h"@interface PMSecuritySettingsController ()@end@implementation PMSecuritySettingsController- (id)init{    self = [super init];    if (self)    {        contentTitle = NSLocalizedString(@"IDS_Security Settings", nil);        [devciePropertyList addObject:[[[SecuritySettings alloc] init] autorelease]];                [self initWithNibName:@"PMSecuritySettingsViewController" bundle:nil];    }        return self;}+ (NSString *)description{    return NSLocalizedString(@"IDS_Security Settings", nil);}- (void)awakeFromNib{    [printSecuritySettingsLabel setStringValue:NSLocalizedString(@"IDS_Software Download", nil)];        [checkButton setTitle:NSLocalizedString(@"Enable", nil)];    [checkButton setState:NSOffState];        [applyButton setTitle:NSLocalizedString(@"Apply New Settings", nil)];        isShowRestartAlert = NO;    isNeedRestart = NO;    isRestarting = NO;}- (void)UpdatePrinterPropertyToView:(id)directionWithResult{    [super UpdatePrinterPropertyToView:directionWithResult];        NSNumber *result = [directionWithResult objectAtIndex:1];    if([result intValue] != DEV_ERROR_SUCCESS)    {        return;    }        int i;    for (i = 0; i < [devciePropertyList count]; i++)    {        DeviceCommond *data = [devciePropertyList objectAtIndex:i];        [self updateView:[data deviceData]];    }}- (void)updateView:(id)data{    if (isRestarting)    {        isRestarting = NO;    }    else    {        DEV_SECURE_SETTINGS *devData = (DEV_SECURE_SETTINGS *)data;        [checkButton setState:devData->Download];    }        isChanged = NO;    [applyButton setEnabled:NO];        if (isShowRestartAlert)    {        isShowRestartAlert = NO;        [self showRestartAlert];    }        if (isNeedRestart)    {        isNeedRestart = NO;        [self restartPrinter];    }}- (IBAction)applyButtonAction:(id)sender{    int i;    for(i = 0; i < [devciePropertyList count]; i++)    {        DeviceCommond *aCommond = [devciePropertyList objectAtIndex:i];        DEV_SECURE_SETTINGS settings;        [self getDataFormView:&settings];        [aCommond setDeviceData:(void*)&settings dataSize:sizeof(DEV_SECURE_SETTINGS)];                isShowRestartAlert = YES;        [self setInfoToDevice];    }}- (void)getDataFormView:(void *)addr{    DEV_SECURE_SETTINGS data;    memset(&data, 0, sizeof(DEV_SECURE_SETTINGS));        data.Download = [checkButton state];        memcpy(addr, &data, sizeof(DEV_SECURE_SETTINGS));}- (IBAction)checkButtonAction:(id)sender{    isChanged = YES;    [applyButton setEnabled:YES];        [devciePropertyList removeAllObjects];    [devciePropertyList addObject:[[[SecuritySettings alloc] init] autorelease]];}- (void)showRestartAlert{    NSAlert *alert = [[NSAlert alloc] init];    [alert setMessageText:NSLocalizedString(@"Printer Setting Utility", nil)];    [alert setInformativeText:NSLocalizedString(@"Restart printer for new settings to take effect.\rDo you want to restart printer?", nil)];    [alert addButtonWithTitle:NSLocalizedString(@"OK", nil)];    [alert addButtonWithTitle:NSLocalizedString(@"Cancel", nil)];        if([alert runModal] == NSAlertFirstButtonReturn)    {        [alert release];        [self restartPrinter];    }    else    {        [alert release];    }}- (void)restartPrinter{    [devciePropertyList removeAllObjects];    [devciePropertyList addObject:[[[DeviceCommond alloc]initWithGroupID:0xff CodeID:0x06 needRestart:YES] autorelease]];    isRestarting = YES;        [self sendInfoToDevice];}@end